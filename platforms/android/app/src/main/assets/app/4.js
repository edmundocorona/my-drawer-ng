(global["webpackJsonp"] = global["webpackJsonp"] || []).push([[4],{

/***/ "./app/settings/settings-routing.module.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = __webpack_require__("../node_modules/@angular/core/fesm5/core.js");
var router_1 = __webpack_require__("../node_modules/nativescript-angular/router/index.js");
var settings_component_1 = __webpack_require__("./app/settings/settings.component.ts");
var routes = [
    { path: "", component: settings_component_1.SettingsComponent }
];
var SettingsRoutingModule = /** @class */ (function () {
    function SettingsRoutingModule() {
    }
    SettingsRoutingModule = __decorate([
        core_1.NgModule({
            imports: [router_1.NativeScriptRouterModule.forChild(routes)],
            exports: [router_1.NativeScriptRouterModule]
        })
    ], SettingsRoutingModule);
    return SettingsRoutingModule;
}());
exports.SettingsRoutingModule = SettingsRoutingModule;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2V0dGluZ3Mtcm91dGluZy5tb2R1bGUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJzZXR0aW5ncy1yb3V0aW5nLm1vZHVsZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLHNDQUF5QztBQUV6QyxzREFBdUU7QUFFdkUsMkRBQXlEO0FBRXpELElBQU0sTUFBTSxHQUFXO0lBQ25CLEVBQUUsSUFBSSxFQUFFLEVBQUUsRUFBRSxTQUFTLEVBQUUsc0NBQWlCLEVBQUU7Q0FDN0MsQ0FBQztBQU1GO0lBQUE7SUFBcUMsQ0FBQztJQUF6QixxQkFBcUI7UUFKakMsZUFBUSxDQUFDO1lBQ04sT0FBTyxFQUFFLENBQUMsaUNBQXdCLENBQUMsUUFBUSxDQUFDLE1BQU0sQ0FBQyxDQUFDO1lBQ3BELE9BQU8sRUFBRSxDQUFDLGlDQUF3QixDQUFDO1NBQ3RDLENBQUM7T0FDVyxxQkFBcUIsQ0FBSTtJQUFELDRCQUFDO0NBQUEsQUFBdEMsSUFBc0M7QUFBekIsc0RBQXFCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTmdNb2R1bGUgfSBmcm9tIFwiQGFuZ3VsYXIvY29yZVwiO1xuaW1wb3J0IHsgUm91dGVzIH0gZnJvbSBcIkBhbmd1bGFyL3JvdXRlclwiO1xuaW1wb3J0IHsgTmF0aXZlU2NyaXB0Um91dGVyTW9kdWxlIH0gZnJvbSBcIm5hdGl2ZXNjcmlwdC1hbmd1bGFyL3JvdXRlclwiO1xuXG5pbXBvcnQgeyBTZXR0aW5nc0NvbXBvbmVudCB9IGZyb20gXCIuL3NldHRpbmdzLmNvbXBvbmVudFwiO1xuXG5jb25zdCByb3V0ZXM6IFJvdXRlcyA9IFtcbiAgICB7IHBhdGg6IFwiXCIsIGNvbXBvbmVudDogU2V0dGluZ3NDb21wb25lbnQgfVxuXTtcblxuQE5nTW9kdWxlKHtcbiAgICBpbXBvcnRzOiBbTmF0aXZlU2NyaXB0Um91dGVyTW9kdWxlLmZvckNoaWxkKHJvdXRlcyldLFxuICAgIGV4cG9ydHM6IFtOYXRpdmVTY3JpcHRSb3V0ZXJNb2R1bGVdXG59KVxuZXhwb3J0IGNsYXNzIFNldHRpbmdzUm91dGluZ01vZHVsZSB7IH1cbiJdfQ==

/***/ }),

/***/ "./app/settings/settings.component.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = __webpack_require__("../node_modules/@angular/core/fesm5/core.js");
var app = __webpack_require__("../node_modules/tns-core-modules/application/application.js");
var SettingsComponent = /** @class */ (function () {
    function SettingsComponent() {
        // Use the component constructor to inject providers.
    }
    SettingsComponent.prototype.ngOnInit = function () {
        // Init your component properties here.
    };
    SettingsComponent.prototype.onDrawerButtonTap = function () {
        var sideDrawer = app.getRootView();
        sideDrawer.showDrawer();
    };
    SettingsComponent = __decorate([
        core_1.Component({
            selector: "Settings",
            /*duleId: module.i*/
            templateUrl: "./settings.component.html"
        }),
        __metadata("design:paramtypes", [])
    ], SettingsComponent);
    return SettingsComponent;
}());
exports.SettingsComponent = SettingsComponent;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2V0dGluZ3MuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsic2V0dGluZ3MuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsc0NBQWtEO0FBRWxELGtEQUFvRDtBQU9wRDtJQUVJO1FBQ0kscURBQXFEO0lBQ3pELENBQUM7SUFFRCxvQ0FBUSxHQUFSO1FBQ0ksdUNBQXVDO0lBQzNDLENBQUM7SUFFRCw2Q0FBaUIsR0FBakI7UUFDSSxJQUFNLFVBQVUsR0FBa0IsR0FBRyxDQUFDLFdBQVcsRUFBRSxDQUFDO1FBQ3BELFVBQVUsQ0FBQyxVQUFVLEVBQUUsQ0FBQztJQUM1QixDQUFDO0lBYlEsaUJBQWlCO1FBTDdCLGdCQUFTLENBQUM7WUFDUCxRQUFRLEVBQUUsVUFBVTtZQUNwQixRQUFRLEVBQUUsTUFBTSxDQUFDLEVBQUU7WUFDbkIsV0FBVyxFQUFFLDJCQUEyQjtTQUMzQyxDQUFDOztPQUNXLGlCQUFpQixDQWM3QjtJQUFELHdCQUFDO0NBQUEsQUFkRCxJQWNDO0FBZFksOENBQWlCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBPbkluaXQgfSBmcm9tIFwiQGFuZ3VsYXIvY29yZVwiO1xuaW1wb3J0IHsgUmFkU2lkZURyYXdlciB9IGZyb20gXCJuYXRpdmVzY3JpcHQtdWktc2lkZWRyYXdlclwiO1xuaW1wb3J0ICogYXMgYXBwIGZyb20gXCJ0bnMtY29yZS1tb2R1bGVzL2FwcGxpY2F0aW9uXCI7XG5cbkBDb21wb25lbnQoe1xuICAgIHNlbGVjdG9yOiBcIlNldHRpbmdzXCIsXG4gICAgbW9kdWxlSWQ6IG1vZHVsZS5pZCxcbiAgICB0ZW1wbGF0ZVVybDogXCIuL3NldHRpbmdzLmNvbXBvbmVudC5odG1sXCJcbn0pXG5leHBvcnQgY2xhc3MgU2V0dGluZ3NDb21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQge1xuXG4gICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgIC8vIFVzZSB0aGUgY29tcG9uZW50IGNvbnN0cnVjdG9yIHRvIGluamVjdCBwcm92aWRlcnMuXG4gICAgfVxuXG4gICAgbmdPbkluaXQoKTogdm9pZCB7XG4gICAgICAgIC8vIEluaXQgeW91ciBjb21wb25lbnQgcHJvcGVydGllcyBoZXJlLlxuICAgIH1cblxuICAgIG9uRHJhd2VyQnV0dG9uVGFwKCk6IHZvaWQge1xuICAgICAgICBjb25zdCBzaWRlRHJhd2VyID0gPFJhZFNpZGVEcmF3ZXI+YXBwLmdldFJvb3RWaWV3KCk7XG4gICAgICAgIHNpZGVEcmF3ZXIuc2hvd0RyYXdlcigpO1xuICAgIH1cbn1cbiJdfQ==

/***/ }),

/***/ "./app/settings/settings.module.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = __webpack_require__("../node_modules/@angular/core/fesm5/core.js");
var common_1 = __webpack_require__("../node_modules/nativescript-angular/common.js");
var settings_routing_module_1 = __webpack_require__("./app/settings/settings-routing.module.ts");
var settings_component_1 = __webpack_require__("./app/settings/settings.component.ts");
var SettingsModule = /** @class */ (function () {
    function SettingsModule() {
    }
    SettingsModule = __decorate([
        core_1.NgModule({
            imports: [
                common_1.NativeScriptCommonModule,
                settings_routing_module_1.SettingsRoutingModule
            ],
            declarations: [
                settings_component_1.SettingsComponent
            ],
            schemas: [
                core_1.NO_ERRORS_SCHEMA
            ]
        })
    ], SettingsModule);
    return SettingsModule;
}());
exports.SettingsModule = SettingsModule;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2V0dGluZ3MubW9kdWxlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsic2V0dGluZ3MubW9kdWxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsc0NBQTJEO0FBQzNELHNEQUF1RTtBQUV2RSxxRUFBa0U7QUFDbEUsMkRBQXlEO0FBY3pEO0lBQUE7SUFBOEIsQ0FBQztJQUFsQixjQUFjO1FBWjFCLGVBQVEsQ0FBQztZQUNOLE9BQU8sRUFBRTtnQkFDTCxpQ0FBd0I7Z0JBQ3hCLCtDQUFxQjthQUN4QjtZQUNELFlBQVksRUFBRTtnQkFDVixzQ0FBaUI7YUFDcEI7WUFDRCxPQUFPLEVBQUU7Z0JBQ0wsdUJBQWdCO2FBQ25CO1NBQ0osQ0FBQztPQUNXLGNBQWMsQ0FBSTtJQUFELHFCQUFDO0NBQUEsQUFBL0IsSUFBK0I7QUFBbEIsd0NBQWMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOZ01vZHVsZSwgTk9fRVJST1JTX1NDSEVNQSB9IGZyb20gXCJAYW5ndWxhci9jb3JlXCI7XG5pbXBvcnQgeyBOYXRpdmVTY3JpcHRDb21tb25Nb2R1bGUgfSBmcm9tIFwibmF0aXZlc2NyaXB0LWFuZ3VsYXIvY29tbW9uXCI7XG5cbmltcG9ydCB7IFNldHRpbmdzUm91dGluZ01vZHVsZSB9IGZyb20gXCIuL3NldHRpbmdzLXJvdXRpbmcubW9kdWxlXCI7XG5pbXBvcnQgeyBTZXR0aW5nc0NvbXBvbmVudCB9IGZyb20gXCIuL3NldHRpbmdzLmNvbXBvbmVudFwiO1xuXG5ATmdNb2R1bGUoe1xuICAgIGltcG9ydHM6IFtcbiAgICAgICAgTmF0aXZlU2NyaXB0Q29tbW9uTW9kdWxlLFxuICAgICAgICBTZXR0aW5nc1JvdXRpbmdNb2R1bGVcbiAgICBdLFxuICAgIGRlY2xhcmF0aW9uczogW1xuICAgICAgICBTZXR0aW5nc0NvbXBvbmVudFxuICAgIF0sXG4gICAgc2NoZW1hczogW1xuICAgICAgICBOT19FUlJPUlNfU0NIRU1BXG4gICAgXVxufSlcbmV4cG9ydCBjbGFzcyBTZXR0aW5nc01vZHVsZSB7IH1cbiJdfQ==;module.hot && module.hot.accept()

/***/ })

}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9hcHAvc2V0dGluZ3Mvc2V0dGluZ3Mtcm91dGluZy5tb2R1bGUudHMiLCJ3ZWJwYWNrOi8vLy4vYXBwL3NldHRpbmdzL3NldHRpbmdzLmNvbXBvbmVudC50cyIsIndlYnBhY2s6Ly8vLi9hcHAvc2V0dGluZ3Mvc2V0dGluZ3MubW9kdWxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7OztBQUFhO0FBQ2IsOENBQThDLGNBQWM7QUFDNUQsYUFBYSxtQkFBTyxDQUFDLDZDQUFlO0FBQ3BDLGVBQWUsbUJBQU8sQ0FBQyxzREFBNkI7QUFDcEQsMkJBQTJCLG1CQUFPLENBQUMsc0NBQXNCO0FBQ3pEO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBLDJDQUEyQyxtd0M7Ozs7Ozs7O0FDcEI5QjtBQUNiLDhDQUE4QyxjQUFjO0FBQzVELGFBQWEsbUJBQU8sQ0FBQyw2Q0FBZTtBQUNwQyxVQUFVLG1CQUFPLENBQUMsNkRBQThCO0FBQ2hEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBLDJDQUEyQyxtakQ7Ozs7Ozs7O0FDMUI5QjtBQUNiLDhDQUE4QyxjQUFjO0FBQzVELGFBQWEsbUJBQU8sQ0FBQyw2Q0FBZTtBQUNwQyxlQUFlLG1CQUFPLENBQUMsZ0RBQTZCO0FBQ3BELGdDQUFnQyxtQkFBTyxDQUFDLDJDQUEyQjtBQUNuRSwyQkFBMkIsbUJBQU8sQ0FBQyxzQ0FBc0I7QUFDekQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQSwyQ0FBMkMsNHVDQUE0dUMsaUMiLCJmaWxlIjoiNC5qcyIsInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xudmFyIGNvcmVfMSA9IHJlcXVpcmUoXCJAYW5ndWxhci9jb3JlXCIpO1xudmFyIHJvdXRlcl8xID0gcmVxdWlyZShcIm5hdGl2ZXNjcmlwdC1hbmd1bGFyL3JvdXRlclwiKTtcbnZhciBzZXR0aW5nc19jb21wb25lbnRfMSA9IHJlcXVpcmUoXCIuL3NldHRpbmdzLmNvbXBvbmVudFwiKTtcbnZhciByb3V0ZXMgPSBbXG4gICAgeyBwYXRoOiBcIlwiLCBjb21wb25lbnQ6IHNldHRpbmdzX2NvbXBvbmVudF8xLlNldHRpbmdzQ29tcG9uZW50IH1cbl07XG52YXIgU2V0dGluZ3NSb3V0aW5nTW9kdWxlID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKCkge1xuICAgIGZ1bmN0aW9uIFNldHRpbmdzUm91dGluZ01vZHVsZSgpIHtcbiAgICB9XG4gICAgU2V0dGluZ3NSb3V0aW5nTW9kdWxlID0gX19kZWNvcmF0ZShbXG4gICAgICAgIGNvcmVfMS5OZ01vZHVsZSh7XG4gICAgICAgICAgICBpbXBvcnRzOiBbcm91dGVyXzEuTmF0aXZlU2NyaXB0Um91dGVyTW9kdWxlLmZvckNoaWxkKHJvdXRlcyldLFxuICAgICAgICAgICAgZXhwb3J0czogW3JvdXRlcl8xLk5hdGl2ZVNjcmlwdFJvdXRlck1vZHVsZV1cbiAgICAgICAgfSlcbiAgICBdLCBTZXR0aW5nc1JvdXRpbmdNb2R1bGUpO1xuICAgIHJldHVybiBTZXR0aW5nc1JvdXRpbmdNb2R1bGU7XG59KCkpO1xuZXhwb3J0cy5TZXR0aW5nc1JvdXRpbmdNb2R1bGUgPSBTZXR0aW5nc1JvdXRpbmdNb2R1bGU7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247YmFzZTY0LGV5SjJaWEp6YVc5dUlqb3pMQ0ptYVd4bElqb2ljMlYwZEdsdVozTXRjbTkxZEdsdVp5NXRiMlIxYkdVdWFuTWlMQ0p6YjNWeVkyVlNiMjkwSWpvaUlpd2ljMjkxY21ObGN5STZXeUp6WlhSMGFXNW5jeTF5YjNWMGFXNW5MbTF2WkhWc1pTNTBjeUpkTENKdVlXMWxjeUk2VzEwc0ltMWhjSEJwYm1keklqb2lPenRCUVVGQkxITkRRVUY1UXp0QlFVVjZReXh6UkVGQmRVVTdRVUZGZGtVc01rUkJRWGxFTzBGQlJYcEVMRWxCUVUwc1RVRkJUU3hIUVVGWE8wbEJRMjVDTEVWQlFVVXNTVUZCU1N4RlFVRkZMRVZCUVVVc1JVRkJSU3hUUVVGVExFVkJRVVVzYzBOQlFXbENMRVZCUVVVN1EwRkROME1zUTBGQlF6dEJRVTFHTzBsQlFVRTdTVUZCY1VNc1EwRkJRenRKUVVGNlFpeHhRa0ZCY1VJN1VVRktha01zWlVGQlVTeERRVUZETzFsQlEwNHNUMEZCVHl4RlFVRkZMRU5CUVVNc2FVTkJRWGRDTEVOQlFVTXNVVUZCVVN4RFFVRkRMRTFCUVUwc1EwRkJReXhEUVVGRE8xbEJRM0JFTEU5QlFVOHNSVUZCUlN4RFFVRkRMR2xEUVVGM1FpeERRVUZETzFOQlEzUkRMRU5CUVVNN1QwRkRWeXh4UWtGQmNVSXNRMEZCU1R0SlFVRkVMRFJDUVVGRE8wTkJRVUVzUVVGQmRFTXNTVUZCYzBNN1FVRkJla0lzYzBSQlFYRkNJaXdpYzI5MWNtTmxjME52Ym5SbGJuUWlPbHNpYVcxd2IzSjBJSHNnVG1kTmIyUjFiR1VnZlNCbWNtOXRJRndpUUdGdVozVnNZWEl2WTI5eVpWd2lPMXh1YVcxd2IzSjBJSHNnVW05MWRHVnpJSDBnWm5KdmJTQmNJa0JoYm1kMWJHRnlMM0p2ZFhSbGNsd2lPMXh1YVcxd2IzSjBJSHNnVG1GMGFYWmxVMk55YVhCMFVtOTFkR1Z5VFc5a2RXeGxJSDBnWm5KdmJTQmNJbTVoZEdsMlpYTmpjbWx3ZEMxaGJtZDFiR0Z5TDNKdmRYUmxjbHdpTzF4dVhHNXBiWEJ2Y25RZ2V5QlRaWFIwYVc1bmMwTnZiWEJ2Ym1WdWRDQjlJR1p5YjIwZ1hDSXVMM05sZEhScGJtZHpMbU52YlhCdmJtVnVkRndpTzF4dVhHNWpiMjV6ZENCeWIzVjBaWE02SUZKdmRYUmxjeUE5SUZ0Y2JpQWdJQ0I3SUhCaGRHZzZJRndpWENJc0lHTnZiWEJ2Ym1WdWREb2dVMlYwZEdsdVozTkRiMjF3YjI1bGJuUWdmVnh1WFR0Y2JseHVRRTVuVFc5a2RXeGxLSHRjYmlBZ0lDQnBiWEJ2Y25Sek9pQmJUbUYwYVhabFUyTnlhWEIwVW05MWRHVnlUVzlrZFd4bExtWnZja05vYVd4a0tISnZkWFJsY3lsZExGeHVJQ0FnSUdWNGNHOXlkSE02SUZ0T1lYUnBkbVZUWTNKcGNIUlNiM1YwWlhKTmIyUjFiR1ZkWEc1OUtWeHVaWGh3YjNKMElHTnNZWE56SUZObGRIUnBibWR6VW05MWRHbHVaMDF2WkhWc1pTQjdJSDFjYmlKZGZRPT0iLCJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbnZhciBjb3JlXzEgPSByZXF1aXJlKFwiQGFuZ3VsYXIvY29yZVwiKTtcbnZhciBhcHAgPSByZXF1aXJlKFwidG5zLWNvcmUtbW9kdWxlcy9hcHBsaWNhdGlvblwiKTtcbnZhciBTZXR0aW5nc0NvbXBvbmVudCA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uICgpIHtcbiAgICBmdW5jdGlvbiBTZXR0aW5nc0NvbXBvbmVudCgpIHtcbiAgICAgICAgLy8gVXNlIHRoZSBjb21wb25lbnQgY29uc3RydWN0b3IgdG8gaW5qZWN0IHByb3ZpZGVycy5cbiAgICB9XG4gICAgU2V0dGluZ3NDb21wb25lbnQucHJvdG90eXBlLm5nT25Jbml0ID0gZnVuY3Rpb24gKCkge1xuICAgICAgICAvLyBJbml0IHlvdXIgY29tcG9uZW50IHByb3BlcnRpZXMgaGVyZS5cbiAgICB9O1xuICAgIFNldHRpbmdzQ29tcG9uZW50LnByb3RvdHlwZS5vbkRyYXdlckJ1dHRvblRhcCA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdmFyIHNpZGVEcmF3ZXIgPSBhcHAuZ2V0Um9vdFZpZXcoKTtcbiAgICAgICAgc2lkZURyYXdlci5zaG93RHJhd2VyKCk7XG4gICAgfTtcbiAgICBTZXR0aW5nc0NvbXBvbmVudCA9IF9fZGVjb3JhdGUoW1xuICAgICAgICBjb3JlXzEuQ29tcG9uZW50KHtcbiAgICAgICAgICAgIHNlbGVjdG9yOiBcIlNldHRpbmdzXCIsXG4gICAgICAgICAgICAvKmR1bGVJZDogbW9kdWxlLmkqL1xuICAgICAgICAgICAgdGVtcGxhdGVVcmw6IFwiLi9zZXR0aW5ncy5jb21wb25lbnQuaHRtbFwiXG4gICAgICAgIH0pLFxuICAgICAgICBfX21ldGFkYXRhKFwiZGVzaWduOnBhcmFtdHlwZXNcIiwgW10pXG4gICAgXSwgU2V0dGluZ3NDb21wb25lbnQpO1xuICAgIHJldHVybiBTZXR0aW5nc0NvbXBvbmVudDtcbn0oKSk7XG5leHBvcnRzLlNldHRpbmdzQ29tcG9uZW50ID0gU2V0dGluZ3NDb21wb25lbnQ7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247YmFzZTY0LGV5SjJaWEp6YVc5dUlqb3pMQ0ptYVd4bElqb2ljMlYwZEdsdVozTXVZMjl0Y0c5dVpXNTBMbXB6SWl3aWMyOTFjbU5sVW05dmRDSTZJaUlzSW5OdmRYSmpaWE1pT2xzaWMyVjBkR2x1WjNNdVkyOXRjRzl1Wlc1MExuUnpJbDBzSW01aGJXVnpJanBiWFN3aWJXRndjR2x1WjNNaU9pSTdPMEZCUVVFc2MwTkJRV3RFTzBGQlJXeEVMR3RFUVVGdlJEdEJRVTl3UkR0SlFVVkpPMUZCUTBrc2NVUkJRWEZFTzBsQlEzcEVMRU5CUVVNN1NVRkZSQ3h2UTBGQlVTeEhRVUZTTzFGQlEwa3NkVU5CUVhWRE8wbEJRek5ETEVOQlFVTTdTVUZGUkN3MlEwRkJhVUlzUjBGQmFrSTdVVUZEU1N4SlFVRk5MRlZCUVZVc1IwRkJhMElzUjBGQlJ5eERRVUZETEZkQlFWY3NSVUZCUlN4RFFVRkRPMUZCUTNCRUxGVkJRVlVzUTBGQlF5eFZRVUZWTEVWQlFVVXNRMEZCUXp0SlFVTTFRaXhEUVVGRE8wbEJZbEVzYVVKQlFXbENPMUZCVERkQ0xHZENRVUZUTEVOQlFVTTdXVUZEVUN4UlFVRlJMRVZCUVVVc1ZVRkJWVHRaUVVOd1FpeFJRVUZSTEVWQlFVVXNUVUZCVFN4RFFVRkRMRVZCUVVVN1dVRkRia0lzVjBGQlZ5eEZRVUZGTERKQ1FVRXlRanRUUVVNelF5eERRVUZET3p0UFFVTlhMR2xDUVVGcFFpeERRV00zUWp0SlFVRkVMSGRDUVVGRE8wTkJRVUVzUVVGa1JDeEpRV05ETzBGQlpGa3NPRU5CUVdsQ0lpd2ljMjkxY21ObGMwTnZiblJsYm5RaU9sc2lhVzF3YjNKMElIc2dRMjl0Y0c5dVpXNTBMQ0JQYmtsdWFYUWdmU0JtY205dElGd2lRR0Z1WjNWc1lYSXZZMjl5WlZ3aU8xeHVhVzF3YjNKMElIc2dVbUZrVTJsa1pVUnlZWGRsY2lCOUlHWnliMjBnWENKdVlYUnBkbVZ6WTNKcGNIUXRkV2t0YzJsa1pXUnlZWGRsY2x3aU8xeHVhVzF3YjNKMElDb2dZWE1nWVhCd0lHWnliMjBnWENKMGJuTXRZMjl5WlMxdGIyUjFiR1Z6TDJGd2NHeHBZMkYwYVc5dVhDSTdYRzVjYmtCRGIyMXdiMjVsYm5Rb2UxeHVJQ0FnSUhObGJHVmpkRzl5T2lCY0lsTmxkSFJwYm1kelhDSXNYRzRnSUNBZ2JXOWtkV3hsU1dRNklHMXZaSFZzWlM1cFpDeGNiaUFnSUNCMFpXMXdiR0YwWlZWeWJEb2dYQ0l1TDNObGRIUnBibWR6TG1OdmJYQnZibVZ1ZEM1b2RHMXNYQ0pjYm4wcFhHNWxlSEJ2Y25RZ1kyeGhjM01nVTJWMGRHbHVaM05EYjIxd2IyNWxiblFnYVcxd2JHVnRaVzUwY3lCUGJrbHVhWFFnZTF4dVhHNGdJQ0FnWTI5dWMzUnlkV04wYjNJb0tTQjdYRzRnSUNBZ0lDQWdJQzh2SUZWelpTQjBhR1VnWTI5dGNHOXVaVzUwSUdOdmJuTjBjblZqZEc5eUlIUnZJR2x1YW1WamRDQndjbTkyYVdSbGNuTXVYRzRnSUNBZ2ZWeHVYRzRnSUNBZ2JtZFBia2x1YVhRb0tUb2dkbTlwWkNCN1hHNGdJQ0FnSUNBZ0lDOHZJRWx1YVhRZ2VXOTFjaUJqYjIxd2IyNWxiblFnY0hKdmNHVnlkR2xsY3lCb1pYSmxMbHh1SUNBZ0lIMWNibHh1SUNBZ0lHOXVSSEpoZDJWeVFuVjBkRzl1VkdGd0tDazZJSFp2YVdRZ2UxeHVJQ0FnSUNBZ0lDQmpiMjV6ZENCemFXUmxSSEpoZDJWeUlEMGdQRkpoWkZOcFpHVkVjbUYzWlhJK1lYQndMbWRsZEZKdmIzUldhV1YzS0NrN1hHNGdJQ0FnSUNBZ0lITnBaR1ZFY21GM1pYSXVjMmh2ZDBSeVlYZGxjaWdwTzF4dUlDQWdJSDFjYm4xY2JpSmRmUT09IiwiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG52YXIgY29yZV8xID0gcmVxdWlyZShcIkBhbmd1bGFyL2NvcmVcIik7XG52YXIgY29tbW9uXzEgPSByZXF1aXJlKFwibmF0aXZlc2NyaXB0LWFuZ3VsYXIvY29tbW9uXCIpO1xudmFyIHNldHRpbmdzX3JvdXRpbmdfbW9kdWxlXzEgPSByZXF1aXJlKFwiLi9zZXR0aW5ncy1yb3V0aW5nLm1vZHVsZVwiKTtcbnZhciBzZXR0aW5nc19jb21wb25lbnRfMSA9IHJlcXVpcmUoXCIuL3NldHRpbmdzLmNvbXBvbmVudFwiKTtcbnZhciBTZXR0aW5nc01vZHVsZSA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uICgpIHtcbiAgICBmdW5jdGlvbiBTZXR0aW5nc01vZHVsZSgpIHtcbiAgICB9XG4gICAgU2V0dGluZ3NNb2R1bGUgPSBfX2RlY29yYXRlKFtcbiAgICAgICAgY29yZV8xLk5nTW9kdWxlKHtcbiAgICAgICAgICAgIGltcG9ydHM6IFtcbiAgICAgICAgICAgICAgICBjb21tb25fMS5OYXRpdmVTY3JpcHRDb21tb25Nb2R1bGUsXG4gICAgICAgICAgICAgICAgc2V0dGluZ3Nfcm91dGluZ19tb2R1bGVfMS5TZXR0aW5nc1JvdXRpbmdNb2R1bGVcbiAgICAgICAgICAgIF0sXG4gICAgICAgICAgICBkZWNsYXJhdGlvbnM6IFtcbiAgICAgICAgICAgICAgICBzZXR0aW5nc19jb21wb25lbnRfMS5TZXR0aW5nc0NvbXBvbmVudFxuICAgICAgICAgICAgXSxcbiAgICAgICAgICAgIHNjaGVtYXM6IFtcbiAgICAgICAgICAgICAgICBjb3JlXzEuTk9fRVJST1JTX1NDSEVNQVxuICAgICAgICAgICAgXVxuICAgICAgICB9KVxuICAgIF0sIFNldHRpbmdzTW9kdWxlKTtcbiAgICByZXR1cm4gU2V0dGluZ3NNb2R1bGU7XG59KCkpO1xuZXhwb3J0cy5TZXR0aW5nc01vZHVsZSA9IFNldHRpbmdzTW9kdWxlO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2Jhc2U2NCxleUoyWlhKemFXOXVJam96TENKbWFXeGxJam9pYzJWMGRHbHVaM011Ylc5a2RXeGxMbXB6SWl3aWMyOTFjbU5sVW05dmRDSTZJaUlzSW5OdmRYSmpaWE1pT2xzaWMyVjBkR2x1WjNNdWJXOWtkV3hsTG5SeklsMHNJbTVoYldWeklqcGJYU3dpYldGd2NHbHVaM01pT2lJN08wRkJRVUVzYzBOQlFUSkVPMEZCUXpORUxITkVRVUYxUlR0QlFVVjJSU3h4UlVGQmEwVTdRVUZEYkVVc01rUkJRWGxFTzBGQlkzcEVPMGxCUVVFN1NVRkJPRUlzUTBGQlF6dEpRVUZzUWl4alFVRmpPMUZCV2pGQ0xHVkJRVkVzUTBGQlF6dFpRVU5PTEU5QlFVOHNSVUZCUlR0blFrRkRUQ3hwUTBGQmQwSTdaMEpCUTNoQ0xDdERRVUZ4UWp0aFFVTjRRanRaUVVORUxGbEJRVmtzUlVGQlJUdG5Ra0ZEVml4elEwRkJhVUk3WVVGRGNFSTdXVUZEUkN4UFFVRlBMRVZCUVVVN1owSkJRMHdzZFVKQlFXZENPMkZCUTI1Q08xTkJRMG9zUTBGQlF6dFBRVU5YTEdOQlFXTXNRMEZCU1R0SlFVRkVMSEZDUVVGRE8wTkJRVUVzUVVGQkwwSXNTVUZCSzBJN1FVRkJiRUlzZDBOQlFXTWlMQ0p6YjNWeVkyVnpRMjl1ZEdWdWRDSTZXeUpwYlhCdmNuUWdleUJPWjAxdlpIVnNaU3dnVGs5ZlJWSlNUMUpUWDFORFNFVk5RU0I5SUdaeWIyMGdYQ0pBWVc1bmRXeGhjaTlqYjNKbFhDSTdYRzVwYlhCdmNuUWdleUJPWVhScGRtVlRZM0pwY0hSRGIyMXRiMjVOYjJSMWJHVWdmU0JtY205dElGd2libUYwYVhabGMyTnlhWEIwTFdGdVozVnNZWEl2WTI5dGJXOXVYQ0k3WEc1Y2JtbHRjRzl5ZENCN0lGTmxkSFJwYm1kelVtOTFkR2x1WjAxdlpIVnNaU0I5SUdaeWIyMGdYQ0l1TDNObGRIUnBibWR6TFhKdmRYUnBibWN1Ylc5a2RXeGxYQ0k3WEc1cGJYQnZjblFnZXlCVFpYUjBhVzVuYzBOdmJYQnZibVZ1ZENCOUlHWnliMjBnWENJdUwzTmxkSFJwYm1kekxtTnZiWEJ2Ym1WdWRGd2lPMXh1WEc1QVRtZE5iMlIxYkdVb2UxeHVJQ0FnSUdsdGNHOXlkSE02SUZ0Y2JpQWdJQ0FnSUNBZ1RtRjBhWFpsVTJOeWFYQjBRMjl0Ylc5dVRXOWtkV3hsTEZ4dUlDQWdJQ0FnSUNCVFpYUjBhVzVuYzFKdmRYUnBibWROYjJSMWJHVmNiaUFnSUNCZExGeHVJQ0FnSUdSbFkyeGhjbUYwYVc5dWN6b2dXMXh1SUNBZ0lDQWdJQ0JUWlhSMGFXNW5jME52YlhCdmJtVnVkRnh1SUNBZ0lGMHNYRzRnSUNBZ2MyTm9aVzFoY3pvZ1cxeHVJQ0FnSUNBZ0lDQk9UMTlGVWxKUFVsTmZVME5JUlUxQlhHNGdJQ0FnWFZ4dWZTbGNibVY0Y0c5eWRDQmpiR0Z6Y3lCVFpYUjBhVzVuYzAxdlpIVnNaU0I3SUgxY2JpSmRmUT09O21vZHVsZS5ob3QgJiYgbW9kdWxlLmhvdC5hY2NlcHQoKSJdLCJzb3VyY2VSb290IjoiIn0=